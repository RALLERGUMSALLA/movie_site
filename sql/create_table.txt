-- Drop tables if they exist
DROP TABLE IF EXISTS Prefer CASCADE;
DROP TABLE IF EXISTS produces CASCADE;
DROP TABLE IF EXISTS Favor CASCADE;
DROP TABLE IF EXISTS Film CASCADE;
DROP TABLE IF EXISTS Producer CASCADE;
DROP TABLE IF EXISTS Users CASCADE;

-- Create tables in the correct order
CREATE TABLE Users (
    UserID SERIAL PRIMARY KEY,
    Username VARCHAR(80) UNIQUE NOT NULL,
    Email VARCHAR(120) UNIQUE NOT NULL,
    Password VARCHAR(200) NOT NULL
);

CREATE TABLE Producer (
    ProducerID SERIAL PRIMARY KEY,
    First_name VARCHAR(255) NOT NULL,
    Sur_name VARCHAR(255) NOT NULL,
    Nationality VARCHAR(255) NOT NULL
);

CREATE TABLE Film (
    FilmID SERIAL PRIMARY KEY,
    Title VARCHAR(255) NOT NULL,
    Language VARCHAR(255) NOT NULL,
    Genre VARCHAR(255) NOT NULL,
    Runtime INT NOT NULL,
    IMDB_score FLOAT NOT NULL
);

CREATE TABLE produces (
    P_ID SERIAL PRIMARY KEY,
    ProducerID INT NOT NULL,
    FilmID INT NOT NULL,
    CONSTRAINT fk_produces_ProducerID FOREIGN KEY (ProducerID) REFERENCES Producer (ProducerID),
    CONSTRAINT fk_produces_FilmID FOREIGN KEY (FilmID) REFERENCES Film (FilmID)
);

CREATE TABLE Favor (
    F_ID SERIAL PRIMARY KEY,
    UserID INT NOT NULL,
    ProducerID INT NOT NULL,
    rating INT NOT NULL,
    CONSTRAINT fk_Favor_UserID FOREIGN KEY (UserID) REFERENCES Users (UserID),
    CONSTRAINT fk_Favor_ProducerID FOREIGN KEY (ProducerID) REFERENCES Producer (ProducerID)
);

CREATE TABLE Prefer (
    P_ID SERIAL PRIMARY KEY,
    UserID INT NOT NULL,
    FilmID INT NOT NULL,
    rating INT NOT NULL,
    CONSTRAINT fk_Prefer_UserID FOREIGN KEY (UserID) REFERENCES Users (UserID),
    CONSTRAINT fk_Prefer_FilmID FOREIGN KEY (FilmID) REFERENCES Film (FilmID)
);

-- Create indexes
CREATE INDEX idx_User_Name
ON Users (Username);